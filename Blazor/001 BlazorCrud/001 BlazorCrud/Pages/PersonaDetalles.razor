@page "/PersonaDetalles"
@page "/PersonaDetalles/{id:int}"
<h3>PersonaDetalles</h3>
@inject NavigationManager manager
@inject IServicioPersona servicio

<EditForm Model="p1">

<table class="table">
    <tr>
        <td >Nombre:</td>
        <td><input class="form-control" type="text" @bind="p1.Nombre" /></td>
    </tr>
    <tr>
        <td >Apellido Paterno:</td>
        <td><input class="form-control" type="text" @bind="p1.ApellidoPaterno"/></td>
    </tr>
    <tr>
        <td >Apellido Materno:</td>
        <td><input class="form-control" type="text" @bind="p1.ApellidoMaterno"/></td>
    </tr>
    <tr>
        <td >Edad:</td>
        <td><input class="form-control" type="number" min="1" max="180" @bind="p1.Edad"/></td>
    </tr>
    <tr>
        <td >Fecha de nacimiento:</td>
        <td><input class="form-control" type="date" @bind="p1.FechaNacimiento"/></td>
    </tr>
    <tr>
        <td colspan="2" style="text-align:center;justify-content:center;">
            <button class="btn btn-primary" @onclick="Guardar">Aceptar</button>
            <button class="btn btn-warning" @onclick="Cancelar">Cancelar</button>
        </td>
    </tr>
</table>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    Persona p1 = new Persona();

    protected async override Task OnInitializedAsync()
    {
        if (id > 0)
        {
            p1 = await servicio.ObtenerPersonaId(id);
            if (p1 == null)
            {
                manager.NavigateTo("/listaPersonas");
            }
        }
    }
    protected void Cancelar()
    {
        manager.NavigateTo("/listaPersonas");
    }
    protected async Task Guardar()
    {
        if (p1.Id == 0)
        {
            await servicio.AgregarPersona(p1);
        }
        else
        {
            await servicio.ModificarPersona(p1);
        }
        manager.NavigateTo("/listaPersonas");
    }


}
